/*
 * Copyright 2020 Vasiliy Vdovin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

* {
	margin: 0;
	padding: 0;
	border: 0;
}

html, body, main, .not-supported {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

#header {
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	height: var(--header-height);
	z-index: 1;
	background-color: rgba(130, 213, 238, 0.15);
}

#header.zoomin {
	background-color: rgba(130, 238, 197, 0.15);
}

#nav {
	position: relative;
	cursor: pointer;
}

main {
	overflow: hidden;
	perspective: 300px ;
	perspective-origin: center;
	background-image: linear-gradient(0deg,
		hsl(var(--main-bc-h), calc(var(--main-bc-s) * 0.55), calc(var(--main-bc-l) * 0.1)) 0%,
		hsl(var(--main-bc-h), calc(var(--main-bc-s) * 0.95), calc(var(--main-bc-l) * 0.85)) 50%,
		hsl(var(--main-bc-h), calc(var(--main-bc-s) * 0.55), calc(var(--main-bc-l) * 0.1)) 100%
	);
	color: white;
}

#wrap {
	position: absolute;
	display: grid;
	grid-auto-columns: 100vw;
	grid-auto-rows: 100vh;
	grid-auto-flow: column;
	grid-column-gap: 80px;
	transform-style: preserve-3d;
	pointer-events: none;
	background: transparent;
	z-index: 0;
}

main article {
	position: relative;
	pointer-events: initial;
	transform-style: preserve-3d;
	background-color: hsl(var(--main-bc-h), calc(var(--main-bc-s) * 0.15), calc(var(--main-bc-l) * 0.65));
}

/* Glow bottom */
main article::before {
	content: "";
	bottom: -149px;
	transform: translate3d(0, 0, 150px) scale(1) rotate3d(1, 0, 0, 90deg);
	background-image: linear-gradient(0deg,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.15), calc(var(--main-bc-l) * 0.15), 0.0) 0%,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.95), calc(var(--main-bc-l) * 0.95), 0.95) 100%
	);
}

/* Shadow bottom */
main article::after {
	content: "";
	bottom: -150px;
	transform: translate3d(0, 0, -150px) scale(1) rotate3d(1, 0, 0, 90deg);
	background-image: linear-gradient(0deg,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.1), calc(var(--main-bc-l) * 0.1), 0.95) 0%,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.75), calc(var(--main-bc-l) * 0.75), 0) 100%
	);
}

/* Glow top */
main article > header {
	top: -149px;
	transform-style: preserve-3d;
	transform: translate3d(0, 0, 150px) scale(1) rotate3d(1, 0, 0, -90deg);
	background-image: linear-gradient(0deg,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.95), calc(var(--main-bc-l) * 0.95), 0.95) 0%,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.15), calc(var(--main-bc-l) * 0.15), 0.0) 100%
	);
}

/* Shadow top */
main article > header::after {
	content: "";
	bottom: -300px;
	background-image: linear-gradient(0deg,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.75), calc(var(--main-bc-l) * 0.75), 0) 0%,
		hsla(var(--main-bc-h), calc(var(--main-bc-s) * 0.1), calc(var(--main-bc-l) * 0.1), 0.95) 100%
	);
}

main article > header, main article > header::after, main article::before, main article::after {
	position: absolute; 
	height: 300px;
	left: 0;
	right: 0;
}

main.zoomin article > header, main.zoomin article > header::after, main.zoomin article::before, main.zoomin article::after {
	display: none;
}

main.zoomout article > header, main.zoomout article::before, main.zoomout article::after {
	display: block;
}

main article > header > h2 {
	position: absolute;
	display: block;
	bottom: 0;
	left: 0;
	right: 0;
	--height: 50px;
	height: var(--height);
	text-align: center;
	transform: translate3d(0, -150px, calc(var(--height) / 2)) rotateX(90deg);
}

#noLoaded main article {
	position: absolute;
	padding: 100px;
}

main.zoomout article {
	cursor: pointer;
	user-select: none;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	transform: translate3d(0, 0, -300px) scale(1);
}

main.zoomin article {
	transform: translate3d(0, 0, 0) scale(1);
}

main article > div {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	opacity: 1;
	z-index: 1;
}

.safe {
	position: absolute;
	top: var(--header-height);;
	right: 0;
	bottom: 0;
	left: calc(var(--sidenav-l-p) + var(--sidenav-width) + var(--sidenav-r-p));
}

main article > div > nav {
	position: fixed;
	display: flex;
	width: var(--sidenav-width);
	padding-left: var(--sidenav-l-p);
	padding-right: var(--sidenav-r-p);
	justify-content: center;
	flex-flow: column;
	top: var(--header-height);
	bottom: 0;
	left: 0;
	z-index: 100;
}

main article > div > nav > ul {
	display: block;
	margin-top: calc(var(--header-height) * -1);
}

main.zoomin article.current > div > nav {
	transition: 300ms all ease-out;
}

main.zoomin article > div > nav {
	opacity: 0;
	transform: translateX(-320px);
}

main.zoomin article > div {
	pointer-events: initial;
}

main.zoomout article > div {
	pointer-events: none;
}

main.zoomin article.current > div > nav, main.zoomout article > div > nav {
	opacity: 1;
	transform: translateX(0);
}

main article.current {
	z-index: 2;
}

main article > div > section {
	position: absolute;
	display: none;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 0;
}

main article > div > section.visible {
	display: block;
	opacity: 1;
	z-index: 1;
}

#noLoaded main article > div > section {
	display: block;
}

.not-supported {
	background: gray;
	z-index: 10;
}

body#noLoaded:before {
	content: "";
	display: block;
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 100;
	display: block;
}

body#noLoaded:after {
	content: "";
	position: fixed;
	display: block;
	top: 50%;
	left: 50%;
	margin-top: -32px;
	margin-left: -32px;
	border-radius: 50%;
	width: 64px;
	height: 64px;
	font-size: 10px;
	transform: translateZ(0);
	border-style: solid;
	border-width: 8px;
	animation: spinner 600ms infinite linear;
	z-index: 101;
}

.section-active {
	color: green;
}

form {
	position: relative;
	padding: 64px;
	background-color: rgb(222, 247, 0);
	--font-size: 16px;
}

form > fieldset {
	position: relative;
	display: grid;
	grid-auto-flow: row;
	padding: 16px;
}

input, textarea {
	outline: none;
	transition-property: border-color;
	transition-duration: 300ms;
	transition-timing-function: ease-out;
	border-width: 5px;
	border-style: solid;
	border-color: orange;
	padding-left: var(--font-size);
	padding-right: var(--font-size);
}

input:hover, textarea:hover {
	border-color: red;
}

input:focus, textarea:focus {
	border-color: blue;
}

fieldset {
	background-color: seagreen;
}

form::before, form::after {
	transition-property: opacity, transform, top;
	transition-duration: 300ms;
	transition-timing-function: ease-out;
	opacity: 0;
}

form.load::before, form.load::after {
	opacity: 1;
}

form::before {
	position: absolute;
	top: 50%;
	left: 0;
	right: 0;
	text-align: center;
	content: "Form sent successfully!";
	z-index: 2;
}

form.load::before {
	top: 25%;
	opacity: 1;
}

form::after {
	position: absolute;
	display: block;
	content: "";
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background-color: salmon;
	transform: scale(0);
	z-index: 1;
}

form.load::after {
	transform: scale(1);
}

form button, form input, form textarea, form label {
	position: relative;
	display: block;
	line-height: calc(var(--font-size) * 2);
	font-size: var(--font-size);
}

form textarea {
	resize: vertical;
}


form button {
	padding-left: calc(var(--font-size) * 2);
	padding-right: calc(var(--font-size) * 2);
}

form button[type=submit]::before, form button[type=submit]::after {
	content: "";
	transition-property: opacity, transform;
	transition-duration: 300ms;
	transition-timing-function: ease-out;
	position: absolute;
	display: block;
	visibility: hidden;
	opacity: 0;
}

form.sended button[type=submit]::before, form.sended button[type=submit]::after {
	visibility: visible;
	opacity: 1;
}

form button[type=submit]:before {
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background-color: rgb(0, 255, 13);
	transform: scale(0);
}

form.sended button[type=submit]::before {
	transform: scale(1);
}

form button[type=submit]:after {
	top: 50%;
	left: 50%;
	width: var(--font-size);
	height: var(--font-size);
	margin-top: calc(var(--font-size) / 2 * -1);
	margin-left: calc(var(--font-size) / 2 * -1);
	border-width: calc(var(--font-size) / 8);

	border-radius: 50%;
	border-style: solid;
	
	border-color: rgba(255, 255, 255, 0.5);
	border-left-color: #ffffff;
}

form.sended button[type=submit]:after {
	animation: spinner 600ms infinite linear;
}

input {
	position: relative;
	display: block;
	background-color: rgb(6, 240, 45);
}

@keyframes spinner {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}